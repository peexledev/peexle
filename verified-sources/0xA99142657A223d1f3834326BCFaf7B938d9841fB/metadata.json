{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "canvasAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "RenounceOwnership",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "acc",
						"type": "address"
					}
				],
				"name": "accountShare",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "auctionBidAddsTimer",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "auctionBidStepPrecesion",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "auctionBidStepShare",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "auctionEndTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bidAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bidEther",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "canvas",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "x",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "y",
						"type": "uint8"
					}
				],
				"name": "chunkIndex",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "chunkOverridePricePercent",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "chunkWriteAddsGameSeconds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "chunksWritenCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimNft",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "etherToClaimTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gameEndTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "x",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "y",
						"type": "uint8"
					}
				],
				"name": "getChunkOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getChunks",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"internalType": "struct ChunkData[576]",
						"name": "",
						"type": "tuple[576]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getChunksCount",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "x",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "y",
						"type": "uint16"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getChunksOwners",
				"outputs": [
					{
						"internalType": "address[576]",
						"name": "accs",
						"type": "address[576]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isAuction",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isAuctionEnd",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "isClaimed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isGameEnd",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isNftClaimed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isStarted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isWriteEnable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "makeBid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "newBidEtherMin",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nft",
				"outputs": [
					{
						"internalType": "contract IMintableNft",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ownerRenounce",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					}
				],
				"name": "setNft",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "setToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "start",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startChunkWritePrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenToClaimTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "x",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "y",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "data",
								"type": "uint256"
							}
						],
						"internalType": "struct ChunkWriteDto[]",
						"name": "input",
						"type": "tuple[]"
					}
				],
				"name": "writeChunks",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "x",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "y",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "data",
								"type": "uint256"
							}
						],
						"internalType": "struct ChunkWriteDto[]",
						"name": "input",
						"type": "tuple[]"
					}
				],
				"name": "writeChunksPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "x",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "y",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "data",
								"type": "uint256"
							}
						],
						"internalType": "struct ChunkWriteDto[]",
						"name": "input",
						"type": "tuple[]"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "writeChunksPriceFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"errors": {
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/game/Game.sol": "Game"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
			"license": "MIT",
			"urls": [
				"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
				"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
			]
		},
		"contracts/canvas/CanvasBounds.sol": {
			"keccak256": "0xe8ff81dc0942b0859ba6a84baf6c1cc0217a9bb80809818a1f39e83b2b96e2fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://9af94656160b03c74501fef36f3bc409121240231c904be33bb42506231cf4a5",
				"dweb:/ipfs/QmPEdcq1NvkYi4umNehodiLpZCv1tvZTrnAihguAFK5UmU"
			]
		},
		"contracts/canvas/ICanvas.sol": {
			"keccak256": "0x593ddb58d24480e0f82d07b0a3e85a1fd4a63242d8da973f7c86f65c734957e1",
			"license": "MIT",
			"urls": [
				"bzz-raw://e79efe8acf9d19a3cdc2d35fdf6abba701cea03d8725c763b0892e909f936ef6",
				"dweb:/ipfs/QmSfrWw2Anf5xXKA3wmz7DbqzSxDecj5PRmTjHrh9Ybktn"
			]
		},
		"contracts/game/Game.sol": {
			"keccak256": "0xdeb03f7960c204fd93c6b62faa9516deb4400d3a14379ebd35f180815686da25",
			"license": "MIT",
			"urls": [
				"bzz-raw://d485d623119fc035ff24fe4400f07916976bc5a0a4e18539887e5f004781954d",
				"dweb:/ipfs/QmdaAp2hbV56Ld69TAVJrTKMr3uJWfEPEXgx6MM2cotrYd"
			]
		},
		"contracts/game/IGame.sol": {
			"keccak256": "0x10f3ffb3a6ddb5b46969874dbf723b1b5ffeb9b7096c68ca8fda557cefbbd79d",
			"license": "MIT",
			"urls": [
				"bzz-raw://dd052b5c2b452acca469bd77ae7023799012197fc97d62b69c80109907f34f0c",
				"dweb:/ipfs/QmTjRTyA1tWfAqFxmfUweQTPMdEuFTEsC47c9KvciSQTQe"
			]
		},
		"contracts/lib/Ownable.sol": {
			"keccak256": "0x85fd0a0ffe07c912404091c431d9f6451c6256d9828523ecbdb655b184a32ce8",
			"license": "MIT",
			"urls": [
				"bzz-raw://726481417ecbf2afdc12c6b2931e9c5853ed5c68bc9322ba5be519e907fbe96d",
				"dweb:/ipfs/QmTdNXx979KzhdK5DnYzYup5kse9FY8RnSU6B6W3wWm7pY"
			]
		},
		"contracts/nft/IMintableNft.sol": {
			"keccak256": "0xf38913c73d364fb859a5bc44d6e91aa5b2a2e8e2a87477120af5a21b83300883",
			"license": "MIT",
			"urls": [
				"bzz-raw://74202e3d260873dc2db4ae06d79487da0b1fea89ab5bde1eb8da3c3e9d95a3df",
				"dweb:/ipfs/QmS1YMoE7Fjhonf5WX87ugTsNPoddeoT9c1jRsRePYukPz"
			]
		}
	},
	"version": 1
}